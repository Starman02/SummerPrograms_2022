from turtle import up
from ursina import *
from ursina.prefabs.first_person_controller import FirstPersonController
from random import uniform

app = Ursina()
Sky()

ground = Entity(model='plane', texture='grass', collider='mesh', scale=(500,1,500))
player = FirstPersonController(position=(0,2,-5))


weapon = Entity(model='Assets\scifi_shotty.obj', parent=camera.ui, scale=1, color=color.gold, texture='white_cube', position=(0.8, -0.6))



enemies = []
objects = []

for i in range(4):
    enemy= FrameAnimation3d('monke_animation/dk', color=color.black, fps=10, scale=1, position=(uniform(-45,45),1,uniform(33,45)))
    enObject = Entity(model=r'monke_animation\dk_1.obj', collider='box', parent=enemies,scale=1, position=(0,30,0))
    enObject.visible = False
    enemy.look_at(player)
    
    enemies.append(enemy)
    objects.append(enObject)
















def update():
    
    if held_keys['left mouse']:
        weapon.position= (0.75,-.55)
    else:
        weapon.position=(.8,-0.6)

    if player.y <-5:
            player.y = 2
    for evil in enemies:
        if evil.visible:
            evil.rotation_x = 270
            evil.rotation_z = -50
            dist = distance(evil, player)
            if dist > 5: # if enemy is distance is greater than 5
                evil.resume()
                try:
                    diff_x = player.x - evil.x
                    diff_z = player.z - evil.z
                    evil.x += 4*time.dt*diff_x*abs(diff_x)
                    evil.z += 4*time.dt*diff_z/abs(diff_z)
                except ZeroDivisionError:
                    print("crash prevented")
            
                    
            else:
                evil.pause()
                print("enemy is stopped")








app.run()